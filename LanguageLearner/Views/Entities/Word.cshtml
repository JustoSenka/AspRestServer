@model EntityModel;

@{
    ViewData["Title"] = Model.WordText;
}

<div class="container">
    <div class="text-right">
        <a class="btn btn-sm" asp-controller="Entities" asp-action="EditWord" asp-route-id="@Model.WordID">Edit</a>
    </div>

    <div class="row">
        <div class="col">
            <h5><i>Word Language: @Model.WordLanguage</i></h5> <br>

            @{
                var alternateSpelling = string.IsNullOrEmpty(Model.WordAlternateSpelling) ? "" : $"({Model.WordAlternateSpelling})";
                var pronunciationText = string.IsNullOrEmpty(Model.WordPronunciation) ? "" : $"({Model.WordPronunciation})";
            }
            <h3><b>@Model.WordArticle @Model.WordText</b> <text class="small"><b>@alternateSpelling</b><i>@pronunciationText</i></text></h3>
            <p>@Model.WordDescription</p>

            <hr>

            @if (!string.IsNullOrEmpty(Model.TranslationText))
            {
                <p style="font-size: large; font-weight: bold">@Model.TranslationText</p>
                <p>@Model.TranslationDescription</p>
            }
            else
            {
                <p>This word is not translated to your native or secondary languages.</p>
            }

            <hr>

            <ul class="list-group list-group-flush">
                @foreach (var (langName, explanationText) in Model.Explanations)
                {
                    <li class="list-group-item">
                        @langName: @explanationText
                    </li>
                }
            </ul>

            <br>
        </div>
    </div>


    @{
        var listModel = new ExpandableListModel()
        {
            Title = "List of Translations",
            Elements = Model.Translations?.Select(t => new ListElement(t.LangName + ": " + t.Text, "Word", "Entities", t.ID)),
        };

        <partial name="_ExpandableListPartial" for="@listModel" />
    }
</div>
