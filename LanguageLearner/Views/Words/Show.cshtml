@model WordsModel;

@{
    ViewData["Title"] = "Words";
}

<partial name="Index" />

<div class="container">
    <br>
    @{
        // If both languages are selected, show regular translatins
        if (Model.LanguageFromID != 0 && Model.LanguageToID != 0)
        {
            var zip = Model.Words.Zip(Model.Definitions, (w, d) => (Word: w, Definition: d));

            var TableModel = new TableModel()
            {
                Title = "Word count: " + Model.Words.Count(),
                Table = zip.Select(t => new[] { t.Word.Text, t.Definition.Text }),
                LeftHeaders = zip.Select(t => t.Word.ID.ToString()),
                TopHeader = new[] { "ID", "Word", "Translation" },
            };

            <partial name="_TablePartial" for="@TableModel" />
        }
        // If only one language selected, just list all words/definitions for specified language
        else if (Model.LanguageFromID != 0)
        {
            var TableModel = new TableModel()
            {
                Title = "Word count: " + Model.Words.Count(),
                Table = Model.Words.Select(w => new[] { w.Text, w.AlternateSpelling, w.Pronunciation }),
                LeftHeaders = Model.Words.Select(t => t.ID.ToString()),
                TopHeader = new[] { "ID", "Word", "Alternate Spelling", "Pronunciation" },
            };

            <partial name="_TablePartial" for="@TableModel" />
        }
        else if (Model.LanguageToID != 0)
        {
            var TableModel = new TableModel()
            {
                Title = "Definition count: " + Model.Definitions.Count(),
                Table = Model.Definitions.Select(d => new[] { d.Text, d.Description }),
                LeftHeaders = Model.Definitions.Select(t => t.ID.ToString()),
                TopHeader = new[] { "ID", "Word", "Description" },
            };

            <partial name="_TablePartial" for="@TableModel" />
        }
        // If nothing is selected, display everything in two tables of words/definitions
        else
        {
            var WordTableModel = new TableModel()
            {
                Title = "Word count: " + Model.Words.Count(),
                Table = Model.Words.Select(w => new[] { w.Language.Name, w.Text, w.AlternateSpelling, w.Pronunciation }),
                LeftHeaders = Model.Words.Select(t => t.ID.ToString()),
                TopHeader = new[] { "ID", "Language", "Word", "Alternate Spelling", "Pronunciation" },
            };

            var DefinitionTableModel = new TableModel()
            {
                Title = "Definition count: " + Model.Definitions.Count(),
                Table = Model.Definitions.Select(d => new[] { d.Language.Name, d.Text, d.Description }),
                LeftHeaders = Model.Definitions.Select(t => t.ID.ToString()),
                TopHeader = new[] { "ID", "Language", "Definition", "Description" },
            };

            <partial name="_TablePartial" for="@WordTableModel" /> <br>
            <partial name="_TablePartial" for="@DefinitionTableModel" />
        }
    }

</div>
